#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
get_invite() {
    clear
    echo -e "${BLUE}=== –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ===${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    if [[ $# -ne 2 ]]; then
        echo -e "${RED}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–≤–∞—à —Å–∞–π—Ç> <username>${NC}"
        echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä: $0 https://yoursite.com foo@bar.com${NC}"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if ! docker ps --filter "name=docmost-db-1" --format "{{.Names}}" | grep -q "docmost-db-1"; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä 'docmost-db-1' –Ω–µ –∑–∞–ø—É—â–µ–Ω.${NC}"
        echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 'docmost' –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.${NC}"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    token=$(docker exec -it docmost-db-1 psql -U docmost -c 'select email,token from workspace_invitations;' 2>/dev/null | grep "${2}" | awk -F'|' '{print $2}' | sed 's/ //g;s/\r//g;s/\$//g')

    # –ü–æ–ª—É—á–µ–Ω–∏–µ id_key
    id_key=$(docker exec -it docmost-db-1 psql -U docmost -c 'select email,id from workspace_invitations;' 2>/dev/null | grep "${2}" | awk -F'|' '{print $2}' | sed 's/ //g;s/\r//g;s/\$//g')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    if [[ -z ${token} ]]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '${2}' –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
        echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ 'workspace_invitations'.${NC}"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ id_key
    if [[ -z ${id_key} ]]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: ID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '${2}' –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
        echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ 'workspace_invitations'.${NC}"
        return 1
    fi

    # –í—ã–≤–æ–¥ —Å—Å—ã–ª–∫–∏
    echo -e "${GREEN}–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:${NC} ${1}/invites/${id_key}?token=${token}"
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
delete_user() {
    clear
    echo -e "${BLUE}=== –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===${NC}\n"
    
    DB_USER="docmost"
    DB_NAME="docmost"
    DB_CONTAINER="docmost-db-1"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ email
    if [ -z "$1" ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!${NC}"
        echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä: user@example.com${NC}"
        return 1
    fi
    EMAIL="$1"

    echo -e "${BLUE}–ü–æ–∏—Å–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å email: $EMAIL ...${NC}"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    USER_ID=$(docker exec -i $DB_CONTAINER psql -U $DB_USER -d $DB_NAME -t -A -c "SELECT id FROM users WHERE email = '$EMAIL';")

    if [ -z "$USER_ID" ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email '$EMAIL' –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        return 1
    fi

    echo -e "${GREEN}ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $USER_ID${NC}"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ...${NC}"
    RELATED_DATA=$(docker exec -i $DB_CONTAINER psql -U $DB_USER -d $DB_NAME -t -A -c "
    SELECT 'groups' AS table_name, id FROM groups WHERE creator_id = '$USER_ID'
    UNION ALL
    SELECT 'spaces', id FROM spaces WHERE creator_id = '$USER_ID'
    UNION ALL
    SELECT 'pages', id FROM pages WHERE creator_id = '$USER_ID'
    UNION ALL
    SELECT 'pages_last_updated', id FROM pages WHERE last_updated_by_id = '$USER_ID'
    UNION ALL
    SELECT 'pages_deleted', id FROM pages WHERE deleted_by_id = '$USER_ID'
    UNION ALL
    SELECT 'workspace_invitations', id FROM workspace_invitations WHERE invited_by_id = '$USER_ID';
    ")

    if [ -n "$RELATED_DATA" ]; then
        echo -e "${YELLOW}–í–Ω–∏–º–∞–Ω–∏–µ: –ù–∞–π–¥–µ–Ω—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!${NC}"
        echo "$RELATED_DATA"
    else
        echo -e "${GREEN}–°–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.${NC}"
    fi

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ NULL
    echo -e "${BLUE}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ NULL ...${NC}"
    docker exec -i $DB_CONTAINER psql -U $DB_USER -d $DB_NAME -c "
    UPDATE groups SET creator_id = NULL WHERE creator_id = '$USER_ID';
    UPDATE spaces SET creator_id = NULL WHERE creator_id = '$USER_ID';
    UPDATE pages SET creator_id = NULL WHERE creator_id = '$USER_ID';
    UPDATE pages SET last_updated_by_id = NULL WHERE last_updated_by_id = '$USER_ID';
    UPDATE pages SET deleted_by_id = NULL WHERE deleted_by_id = '$USER_ID';
    UPDATE workspace_invitations SET invited_by_id = NULL WHERE invited_by_id = '$USER_ID';
    "

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    echo -e "${BLUE}–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: $USER_ID ...${NC}"
    docker exec -i $DB_CONTAINER psql -U $DB_USER -d $DB_NAME -c "DELETE FROM users WHERE id = '$USER_ID';"

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    echo -e "${BLUE}–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è ...${NC}"
    REMAINING_DATA=$(docker exec -i $DB_CONTAINER psql -U $DB_USER -d $DB_NAME -t -A -c "
    SELECT 'groups' AS table_name, id FROM groups WHERE creator_id = '$USER_ID'
    UNION ALL
    SELECT 'spaces', id FROM spaces WHERE creator_id = '$USER_ID'
    UNION ALL
    SELECT 'pages', id FROM pages WHERE creator_id = '$USER_ID'
    UNION ALL
    SELECT 'pages_last_updated', id FROM pages WHERE last_updated_by_id = '$USER_ID'
    UNION ALL
    SELECT 'pages_deleted', id FROM pages WHERE deleted_by_id = '$USER_ID'
    UNION ALL
    SELECT 'workspace_invitations', id FROM workspace_invitations WHERE invited_by_id = '$USER_ID';
    ")

    if [ -n "$REMAINING_DATA" ]; then
        echo -e "${YELLOW}–í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–ª–∏—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è!${NC}"
        echo "$REMAINING_DATA"
    else
        echo -e "${GREEN}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
install_docmost() {
    clear
    echo -e "${BLUE}=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docmost ===${NC}\n"

    # –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...${NC}"
    sudo apt-get update -qqy
    sudo apt-get install ca-certificates curl -qqy
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc

    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    sudo apt-get update -qqy
    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -qqy

    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ docker-compose.yml
    echo -e "${BLUE}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ docmost...${NC}"
    mkdir -p docmost
    cd docmost || { echo -e "${RED}–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é docmost${NC}"; return 1; }
    curl -O https://raw.githubusercontent.com/docmost/docmost/main/docker-compose.yml

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞
    if [ ! -f docker-compose.yml ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        return 1
    fi

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è APP_SECRET
    APP_SECRET=$(openssl rand -hex 32)

    # –ó–∞–ø—Ä–æ—Å –¥–æ–º–µ–Ω–∞
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://example.com) [Enter –¥–ª—è http://localhost:3000]:${NC}"
    read APP_URL
    APP_URL=${APP_URL:-http://localhost:3000}

    if [[ -z "$APP_URL" ]]; then
        echo -e "${GREEN}–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–æ–º–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $APP_URL${NC}"
    else
        if ! [[ "$APP_URL" =~ ^https?://.* ]]; then
            echo -e "${YELLOW}–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –î–æ–º–µ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'http://' –∏–ª–∏ 'https://'. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è '$APP_URL' –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ.${NC}"
        fi
    fi

    # –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è PostgreSQL
    while true; do
        echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–∞–¥—ë–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è PostgreSQL (—Ç–æ–ª—å–∫–æ a-zA-Z0-9):${NC}"
        read POSTGRES_PASSWORD
        if [[ "$POSTGRES_PASSWORD" =~ ^[a-zA-Z0-9]+$ ]]; then
            break
        else
            echo -e "${RED}–û—à–∏–±–∫–∞: –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤–µ–Ω–Ω–æ-—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã (a-zA-Z0-9).${NC}"
        fi
    done

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml
    sed -i "s|APP_URL=.*|APP_URL=$APP_URL|" docker-compose.yml
    sed -i "s|APP_SECRET:.*|APP_SECRET: \"$APP_SECRET\"|" docker-compose.yml
    sed -i "s|STRONG_DB_PASSWORD|$POSTGRES_PASSWORD|g" docker-compose.yml

    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    echo -e "${BLUE}–ó–∞–ø—É—Å–∫ docmost...${NC}"
    docker compose up -d
    echo -e "${GREEN}Docmost —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –õ–æ–≥–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: docker compose logs -f${NC}"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
    clear
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë    Docmost –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ              ‚ïë${NC}"
    echo -e "${BLUE}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${NC}"
    echo -e "${BLUE}‚ïë${GREEN} [1] –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïë${GREEN} [2] –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è           ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïë${GREEN} [3] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docmost             ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïë${RED} [4] –í—ã—Ö–æ–¥                          ${BLUE}‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:${NC} "
    read -p "" choice

    case $choice in
        1)
            echo -e "\n${YELLOW}–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://yoursite.com):${NC}"
            read site_url
            echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:${NC}"
            read username
            get_invite "$site_url" "$username"
            echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
            read
            ;;
        2)
            echo -e "\n${YELLOW}–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:${NC}"
            read email
            delete_user "$email"
            echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
            read
            ;;
        3)
            install_docmost
            echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
            read
            ;;
        4)
            echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
            sleep 2
            ;;
    esac
done
